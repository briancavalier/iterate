<?xml version="1.0" encoding="UTF-8"?>
<project name="iterate" default="all">
  
  
  <property file="iterate.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="128m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.zip"/>
    <include name="*.war"/>
    <include name="*.egg"/>
    <include name="*.ear"/>
    <include name="*.swc"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <include name="**/?*.properties"/>
    <include name="**/?*.xml"/>
    <include name="**/?*.gif"/>
    <include name="**/?*.png"/>
    <include name="**/?*.jpeg"/>
    <include name="**/?*.jpg"/>
    <include name="**/?*.html"/>
    <include name="**/?*.dtd"/>
    <include name="**/?*.tld"/>
    <include name="**/?*.ftl"/>
  </patternset>
  
  
  <!-- Project Libraries -->
  
  <path id="library.xml.classpath">
    <pathelement location="${basedir}/lib/jdom.jar"/>
  </path>
  
  <!-- Modules -->
  
  
  <!-- Module Iterate -->
  
  <dirname property="module.iterate.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.iterate" value="${compiler.args}"/>
  
  <property name="iterate.output.dir" value="${module.iterate.basedir}/build/production/Iterate"/>
  <property name="iterate.testoutput.dir" value="${module.iterate.basedir}/build/test/Iterate"/>
  
  <path id="iterate.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="iterate.module.production.classpath">
    <path refid="library.xml.classpath"/>
  </path>
  
  <path id="iterate.runtime.production.module.classpath">
    <pathelement location="${iterate.output.dir}"/>
    <path refid="library.xml.classpath"/>
  </path>
  
  <path id="iterate.module.classpath">
    <pathelement location="${iterate.output.dir}"/>
    <path refid="library.xml.classpath"/>
  </path>
  
  <path id="iterate.runtime.module.classpath">
    <pathelement location="${iterate.testoutput.dir}"/>
    <pathelement location="${iterate.output.dir}"/>
    <path refid="library.xml.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.iterate">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.iterate">
    <patternset refid="excluded.from.module.iterate"/>
  </patternset>
  
  <path id="iterate.module.sourcepath">
    <dirset dir="${module.iterate.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.iterate" depends="compile.module.iterate.production,compile.module.iterate.tests" description="Compile module Iterate"/>
  
  <target name="compile.module.iterate.production" description="Compile module Iterate; production classes">
    <mkdir dir="${iterate.output.dir}"/>
    <javac destdir="${iterate.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.iterate}"/>
      <bootclasspath refid="iterate.module.bootclasspath"/>
      <classpath refid="iterate.module.production.classpath"/>
      <src refid="iterate.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.iterate"/>
    </javac>
    
    <copy todir="${iterate.output.dir}">
      <fileset dir="${module.iterate.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.iterate.tests" depends="compile.module.iterate.production" description="compile module Iterate; test classes" unless="skip.tests"/>
  
  <target name="clean.module.iterate" description="cleanup module">
    <delete dir="${iterate.output.dir}"/>
    <delete dir="${iterate.testoutput.dir}"/>
  </target>
  
  
  <!-- Module examples -->
  
  <dirname property="module.examples.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.examples" value="${compiler.args}"/>
  
  <property name="examples.output.dir" value="${module.examples.basedir}/build/production/examples"/>
  <property name="examples.testoutput.dir" value="${module.examples.basedir}/build/test/examples"/>
  
  <path id="examples.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="examples.module.production.classpath">
    <pathelement location="${iterate.output.dir}"/>
    <path refid="library.xml.classpath"/>
  </path>
  
  <path id="examples.runtime.production.module.classpath">
    <pathelement location="${examples.output.dir}"/>
    <path refid="iterate.runtime.production.module.classpath"/>
    <path refid="library.xml.classpath"/>
  </path>
  
  <path id="examples.module.classpath">
    <pathelement location="${examples.output.dir}"/>
    <pathelement location="${iterate.testoutput.dir}"/>
    <pathelement location="${iterate.output.dir}"/>
    <path refid="library.xml.classpath"/>
  </path>
  
  <path id="examples.runtime.module.classpath">
    <pathelement location="${examples.testoutput.dir}"/>
    <pathelement location="${examples.output.dir}"/>
    <path refid="iterate.runtime.module.classpath"/>
    <path refid="library.xml.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.examples">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.examples">
    <patternset refid="excluded.from.module.examples"/>
  </patternset>
  
  <path id="examples.module.sourcepath">
    <dirset dir="${module.examples.basedir}">
      <include name="examples"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.examples" depends="compile.module.examples.production,compile.module.examples.tests" description="Compile module examples"/>
  
  <target name="compile.module.examples.production" depends="compile.module.iterate" description="Compile module examples; production classes">
    <mkdir dir="${examples.output.dir}"/>
    <javac destdir="${examples.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.examples}"/>
      <bootclasspath refid="examples.module.bootclasspath"/>
      <classpath refid="examples.module.production.classpath"/>
      <src refid="examples.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.examples"/>
    </javac>
    
    <copy todir="${examples.output.dir}">
      <fileset dir="${module.examples.basedir}/examples">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.examples.tests" depends="compile.module.examples.production" description="compile module examples; test classes" unless="skip.tests"/>
  
  <target name="clean.module.examples" description="cleanup module">
    <delete dir="${examples.output.dir}"/>
    <delete dir="${examples.testoutput.dir}"/>
  </target>
  
  
  <!-- Module test -->
  
  <dirname property="module.test.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.test" value="${compiler.args}"/>
  
  <property name="test.output.dir" value="${module.test.basedir}/build/production/test"/>
  <property name="test.testoutput.dir" value="${module.test.basedir}/build/test/test"/>
  
  <path id="test.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="test.module.production.classpath">
    <path refid="library.xml.classpath"/>
    <pathelement location="${iterate.output.dir}"/>
    <pathelement location="${idea.home}/lib/junit-4.7.jar"/>
  </path>
  
  <path id="test.runtime.production.module.classpath">
    <pathelement location="${test.output.dir}"/>
    <path refid="library.xml.classpath"/>
    <path refid="iterate.runtime.production.module.classpath"/>
    <pathelement location="${idea.home}/lib/junit-4.7.jar"/>
  </path>
  
  <path id="test.module.classpath">
    <pathelement location="${test.output.dir}"/>
    <path refid="library.xml.classpath"/>
    <pathelement location="${iterate.testoutput.dir}"/>
    <pathelement location="${iterate.output.dir}"/>
    <pathelement location="${idea.home}/lib/junit-4.7.jar"/>
  </path>
  
  <path id="test.runtime.module.classpath">
    <pathelement location="${test.testoutput.dir}"/>
    <pathelement location="${test.output.dir}"/>
    <path refid="library.xml.classpath"/>
    <path refid="iterate.runtime.module.classpath"/>
    <pathelement location="${idea.home}/lib/junit-4.7.jar"/>
  </path>
  
  
  <patternset id="excluded.from.module.test">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.test">
    <patternset refid="excluded.from.module.test"/>
  </patternset>
  
  <path id="test.module.sourcepath">
    <dirset dir="${module.test.basedir}">
      <include name="test"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.test" depends="compile.module.test.production,compile.module.test.tests" description="Compile module test"/>
  
  <target name="compile.module.test.production" depends="compile.module.iterate" description="Compile module test; production classes">
    <mkdir dir="${test.output.dir}"/>
    <javac destdir="${test.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.test}"/>
      <bootclasspath refid="test.module.bootclasspath"/>
      <classpath refid="test.module.production.classpath"/>
      <src refid="test.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.test"/>
    </javac>
    
    <copy todir="${test.output.dir}">
      <fileset dir="${module.test.basedir}/test">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.test.tests" depends="compile.module.test.production" description="compile module test; test classes" unless="skip.tests"/>
  
  <target name="clean.module.test" description="cleanup module">
    <delete dir="${test.output.dir}"/>
    <delete dir="${test.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.iterate, clean.module.examples, clean.module.test" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.iterate, compile.module.examples, compile.module.test" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.iterate:jar" value="${basedir}/lib"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="temp.jar.path.Iterate.jar" value="${artifacts.temp.dir}/Iterate.jar"/>
  </target>
  
  <target name="artifact.iterate:jar" depends="init.artifacts, compile.module.iterate" description="Build &apos;Iterate:jar&apos; artifact">
    <property name="artifact.temp.output.iterate:jar" value="${artifacts.temp.dir}/Iterate_jar"/>
    <mkdir dir="${artifact.temp.output.iterate:jar}"/>
    <jar destfile="${temp.jar.path.Iterate.jar}" duplicate="preserve" filesetmanifest="mergewithoutmain">
      <zipfileset dir="${iterate.output.dir}"/>
    </jar>
    <copy file="${temp.jar.path.Iterate.jar}" tofile="${artifact.temp.output.iterate:jar}/Iterate.jar"/>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.iterate:jar" description="Build all artifacts">
    <mkdir dir="${artifact.output.iterate:jar}"/>
    <copy todir="${artifact.output.iterate:jar}">
      <fileset dir="${artifact.temp.output.iterate:jar}"/>
    </copy>
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>